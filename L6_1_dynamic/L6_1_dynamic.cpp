/*
    Даны целые положительные числа M, N, число D и набор из N чисел. Сформировать матрицу размера M × N,
    у которой первая строка совпадает с исходным набором чисел, а элементы каждой следующей строки равны
    соответствующему элементу предыдущей строки, умноженному на D
    (в результате каждый столбец матрицы будет содержать элементы геометрической прогрессии).
*/

#include <iostream>

using namespace std;
int main() {
    setlocale(LC_ALL, "ru");
    // Объявление переменных
    int m, n;
    double d;
    // Ввод значения переменной m
    cout << "Введите значение переменной(m > 0): ";
    cin >> m;
    // Ввод значения переменной n
    cout << "Введите значение переменной(n > 0): ";
    cin >> n;
    // Проверка на неправильный ввод размера матрицы
    if (m <= 0 || n <= 0) {
        cerr << "\nНеправильный ввод значений пременных";
        return 1;
    }
    // Ввод значения переменной d  
    cout << "Введите значение переменной d: ";
    cin >> d;
    // Обявление динамического двумерного массива
    // Обявление указателя на массив указателей
    double** matrix;
    // Выделение памяти под массив указателей
    matrix = new double* [m];
    for (int i = 0; i < m; i++) {
        // Выделение памяти под массив
        matrix[i] = new double[n];
    }
    // Ввод набора из n чисел
    for (int j = 0; j < n; j++) {
        cout << "Введите " << j + 1 << " набора: ";
        cin >> matrix[0][j];
    }
    // Циклы по матрице
    for (int i = 1; i < m; i++) {
        for (int j = 0; j < n; j++) {
            // Присвоение элементу матрицы значение элемента прошлой строки умноженный на d
            matrix[i][j] = matrix[i - 1][j] * d;
        }
    }
    // Вывод полученной матрицы
    cout << "Полученная матрица: " << endl;
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            cout << matrix[i][j] << "\t";
        }
        cout << endl;
    }
    for (int i = 0; i < n; i++) {
        delete[] matrix[i];
    }
    delete[] matrix;
}